version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: bazaruto-postgres
    environment:
      POSTGRES_DB: bazaruto
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: bazaruto-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: bazaruto-otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8888:8888"   # Prometheus metrics
      - "8889:8889"   # Prometheus exporter metrics
    depends_on:
      - postgres
      - redis

  bazaruto:
    build:
      context: ..
      dockerfile: build/Dockerfile
    container_name: bazaruto-api
    environment:
      BAZARUTO_DB_DSN: "postgres://postgres:postgres@postgres:5432/bazaruto?sslmode=disable"
      BAZARUTO_REDIS_ADDR: "redis:6379"
      BAZARUTO_RATE_PROVIDER: "redis"
      BAZARUTO_OBSERVABILITY_TRACING_ENABLED: "true"
      BAZARUTO_OBSERVABILITY_TRACING_ENDPOINT: "otel-collector:4317"
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      otel-collector:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
